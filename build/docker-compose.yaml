version: "3.8"

services:
  proxy:
    image: docker.io/traefik:v3.1.2
    hostname: desafio_proxy
    container_name: desafio_proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.db.address=:5432"
      - "--entrypoints.graphql.address=:8082"
      - "--entrypoints.grpc.address=:50051"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    image: docker.io/tomelin/desafio-fc:0.10.0 
    hostname: desafio_app
    container_name: desafio_app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`desafio_app.docker.localhost`)"
      - "traefik.http.routers.app.entrypoints=http"
      - "traefik.http.routers.app.service=service_app"
      - "traefik.http.services.service_app.loadbalancer.server.port=8443"
      - "traefik.http.routers.grpc.rule=Host(`desafio_grpc.docker.localhost`)"
      - "traefik.http.routers.grpc.entrypoints=grpc"
      - "traefik.http.routers.grpc.service=service_app_tcp"
      - "traefik.http.services.service_app_tcp.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.service_app_tcp.loadbalancer.server.port=50051"
      - "traefik.http.routers.app.rule=Host(`desafio_graphql.docker.localhost`)"
      - "traefik.http.routers.app.service=service_app_graphql"
      - "traefik.http.services.service_app_graphql.loadbalancer.server.port=8082"
    ports:
      - "8443:8443"
      - "8082:8082"
      - "50051:50051"
    depends_on:
      - database
      - redis
  database:
    hostname: desafio_database
    container_name: desafio_database
    image: docker.io/postgres:12
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: UE9TVEdSRVNfUEFTU1dPUkQK
      POSTGRES_USER: admin
      POSTGRES_DB: desafio
  redis:
    hostname: desafio_cache
    container_name: desafio_cache
    image: docker.io/redis
    command: redis-server --requirepass cmVkaXMtc2VydmVyCg --bind 0.0.0.0
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
  redis-commander:
    container_name: redis_admin
    hostname: redis_admin
    image: docker.io/rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: redis
      REDIS_HOST: redis
      REDIS_PORT: redis:6379
      REDIS_PASSWORD: cmVkaXMtc2VydmVyCg
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    ports:
    - "8081:8081"
